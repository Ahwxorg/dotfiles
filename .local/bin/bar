#!/bin/env sh

# INIT
printf "$$" > ~/.cache/pidofbar
sec=0

update_memory () { 
	memory="$(free -h | sed -n "2s/\([^ ]* *\)\{2\}\([^ ]*\).*/\2/p")"
}

update_time () { 
	time="$(date "+[   %a %d %b ] [   %I:%M %P ]")" 
}

update_uptime () {
  uptime=$(upt)
}

update_nettraf () {
  nettraf=$(nettraf)
  # ﯱ
}

update_bat () { 
	# you might need to change the path depending on your device
  bat_status=$(cat /sys/class/power_supply/BAT0/status)
  bat_capacity=$(cat /sys/class/power_supply/BAT0/capacity)
	if [ "$bat_status" = "Charging" ]; then
		bat_status=""
	elif [ "$bat_capacity" -gt 80 ]; then
		bat_status=""
	elif [ "$bat_capacity" -gt 60 ]; then
		bat_status=""
	elif [ "$bat_capacity" -gt 40 ]; then
		bat_status=""
	elif [ "$bat_capacity" -gt 20 ]; then
		bat_status=""
	else 
		bat_status=""
	fi
	bat="$bat_status   $bat_capacity%"
}

update_backlight () {
  backlight="  $(fish -c 'echo (echo (math (brightnessctl g) / 1515 \* 100) | cut -d. -f1)%')"
}

update_vol () { 
	vol="$([ "$(pamixer --get-mute)" = "false" ] && printf '  ' || printf '  ')$(pamixer --get-volume)%"
}

display () { 
	xsetroot -name "   [  $uptime ] [   $memory ] [ $vol ] [ $backlight ] [ $bat ] $time"
}

update_bat
update_vol
update_time
update_memory
update_backlight
#update_nettraf
update_uptime

trap	"update_vol;update_backlight;display"	"RTMIN"

## kill -m "$(cat ~/.cache/pidofbar)"
# where m = 34 + n

while true
do
	sleep 1 &
  wait && { 
		# to update item ever n seconds with a offset of m
		## [ $((sec % n)) -eq m ] && udpate_item
		[ $((sec % 1 )) -eq 0 ] && update_time
		[ $((sec % 5 )) -eq 0 ] && update_memory
    [ $((sec % 1 )) -eq 0 ] && update_bat
    [ $((sec % 1 )) -eq 0 ] && update_backlight
    [ $((sec % 60)) -eq 0 ] && update_uptime
#    [ $((sec % 1 )) -eq 0 ] && update_nettraf
    [ $((sec % 300 )) -eq 0 ] && /home/ahwx/.local/bin/batterynotification

		# how often the display updates ( 5 seconds )
		[ $((sec % 1 )) -eq 0 ] && display
		sec=$((sec + 1))
	}
done 
