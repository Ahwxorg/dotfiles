corner-radius= 8.0

shadow = true;
shadow-radius = 10;
shadow-offset-x = -10;
shadow-offset-y = -10;
shadow-opacity = 0.6;
shadow-red = 0.0;
shadow-blue = 0.0;

shadow-exclude = [
  "class_g = 'eww-bubbly'",
  "class_g = 'eww-keystrokes'",
  # "class_g = 'eww-selector'",
];

#################################
#          Animations           #
#################################

animations: true;

animation-stiffness = 300
animation-window-mass = 0.7
animation-dampening = 20
animation-clamping = true

animation-for-open-window = "zoom"; #open window
animation-for-unmap-window = "zoom"; #minimize window
animation-for-menu-window = "zoom";
animation-for-transient-window = "zoom"; #popup windows

animation-for-workspace-switch-in = "zoom"; #the windows in the workspace that is coming in
animation-for-workspace-switch-out = "zoom"; #the windows in the workspace that are coming out

experimental-backends = true;
backend = "glx";

#========================= Transparency / Opacity =========================#

# Opacity of inactive windows. (0.1 - 1.0, defaults to 1.0)
# inactive-opacity = 1
inactive-opacity = 0.9;

# Opacity of window titlebars and borders. (0.1 - 1.0, disabled by default)
# frame-opacity = 1.0
frame-opacity = 1.0;

# Let inactive opacity set by -i override the '_NET_WM_OPACITY' values of windows.
# inactive-opacity-override = true
inactive-opacity-override = true;

# Default opacity for active windows. (0.0 - 1.0, defaults to 1.0)
active-opacity = 1.0;

# Dim inactive windows. (0.0 - 1.0, defaults to 0.0)
# inactive-dim = 0.5

# Specify a list of conditions of windows that should always be considered focused.
# focus-exclude = []
focus-exclude = [
  "class_g = 'Bar'",                    # lemonbar
  "class_g = 'dwm'",
  "class_g = 'slop'"                    # maim
];

# Use fixed inactive dim value, instead of adjusting according to window opacity.
# inactive-dim-fixed = 1.0

# Specify a list of opacity rules, in the format `PERCENT:PATTERN`,
# like `50:name *= "Firefox"`. picom-trans is recommended over this.
# Note we don't make any guarantee about possible conflicts with other
# programs that set '_NET_WM_WINDOW_OPACITY' on frame or client windows.
# example:
#    opacity-rule = [ "80:class_g = 'URxvt'" ];
#
# opacity-rule = []
opacity-rule = [
  "100:class_g    = 'Bar'",            # lemonbar
  "100:class_g    = 'slop'",           # maim
  "50:class_g    ?= 'rofi'", 
  "100:class_g    = 'XTerm'",
  "100:class_g    = 'URxvt'",
  "80:class_g    = 'kitty'",
  "90:class_g    = 'Alacritty'",
  "90:class_g    = 'alacritty-float'",
  "100:class_g    = 'Polybar'",
  # "50:class_g    = 'Google-chrome'",
  "80:name       *?= 'Visual studio Code'",
  "80:class_g    = 'jetbrains-studio'",
  "80:class_g    = 'Pcmanfm'",
	"80:name    = 'Dunst'",
  "50:class_g    = 'Notification'",
  "100:class_g    = 'Meld'",
  "100:class_g    = 'TelegramDesktop'",
  "100:class_g    = 'Joplin'",
  "100:class_g    = 'firefox'",
  "85:class_g    = 'qBittorrent'",
  "100:class_g    = 'Thunderbird'"
];

#========================= Shadows =========================#

# Enabled client-side shadows on windows. Note desktop windows
# (windows with '_NET_WM_WINDOW_TYPE_DESKTOP') never get shadow,
# unless explicitly requested using the wintypes option.
#
shadow = true;

# The blur radius for shadows, in pixels. (defaults to 12)
shadow-radius = 12;

# The opacity of shadows. (0.0 - 1.0, defaults to 0.75)
shadow-opacity = 0.50;

# The left offset for shadows, in pixels. (defaults to -15)
shadow-offset-x = -5;

# The top offset for shadows, in pixels. (defaults to -15)
shadow-offset-y = -5;

# Red color value of shadow (0.0 - 1.0, defaults to 0).
# shadow-red = 0

# Green color value of shadow (0.0 - 1.0, defaults to 0).
# shadow-green = 0

# Blue color value of shadow (0.0 - 1.0, defaults to 0).
# shadow-blue = 0

# Hex string color value of shadow (#000000 - #FFFFFF, defaults to #000000). This option will override options set shadow-(red/green/blue)
# shadow-color = "#000000"

# Specify a list of conditions of windows that should have no shadow.
#
# examples:
#   shadow-exclude = "n:e:Notification";
#
# shadow-exclude = []
shadow-exclude = [
	"class_g = 'Cairo-clock'",
	"class_g = 'CoverGloobus'",
	"class_g = 'Tilda'",
	"name ?= 'gnome-pie'",
#	"class_g = 'Dmenu'",
#	"class_g ?= 'rofi'",
	"class_g ?= 'polybar'",
    "class_g ?= 'Plank'",
    "name *= 'recordmydesktop'",
    "name = 'Notification'",
    "name = 'Docky'",
    "name = 'Kupfer'",
    "name = 'xfce4-notifyd'",
    "name *= 'VLC'",
    "name *= 'Chrome'",
    "class_g = 'Conky'",
    "class_g = 'Kupfer'",
    "class_g = 'Synapse'",
    "class_g ?= 'Notify-osd'",
    "class_g ?= 'Cairo-dock'",
    "class_g ?= 'Xfce4-notifyd'",
    "class_g ?= 'Xfce4-power-manager'",
    "_GTK_FRAME_EXTENTS@:c",
    "_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'"
];

# Specify a X geometry that describes the region in which shadow should not
# be painted in, such as a dock window region. Use
#    shadow-exclude-reg = "x10+0+0"
# for example, if the 10 pixels on the bottom of the screen should not have shadows painted on.
#
# shadow-exclude-reg = ""

# Crop shadow of a window fully on a particular Xinerama screen to the screen.
# xinerama-shadow-crop = false

#========================= Blurring =========================#

blur: {
  method = "dual_kawase";
  # method = "none";
  strength = 7;
  background = false;
  background-frame = false;
  background-fixed = false;
  kern = "3x3box";
}

# Exclude conditions for background blur.
blur-background-exclude = [
	"window_type = 'dock'",
	"window_type = 'desktop'",
	"class_g = 'Plank'",
	"class_g = 'slop'",
	"_GTK_FRAME_EXTENTS@:c"
];

